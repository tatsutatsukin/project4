# -*- coding: utf-8 -*-
"""F0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cwHEtpSl1kEDevOLXtdNS58__CdMj8iX
"""

#pip install pyworld

import pyworld as pw
import numpy as np
import matplotlib.pyplot as plt
import soundfile as sf
from scipy.interpolate  import interp1d
from scipy.io import wavfile


class F0:

  def __init__ (self,filepath,cut_time):
    self.filepath=filepath
    self.cut_time=cut_time
    self.f0_list=self.get_f0(cut_time,filepath)

  def f0_estimate(self,filepath):
    sr, y = wavfile.read(filepath)     # 周波数と振幅値の抽出
    y = y.astype(np.float)
    _f0, _time = pw.dio(y, sr)
    f0 = pw.stonemask(y, _f0, _time, sr)
    return f0
  
  def get_f0(self,cut_time,filepath):
    #cut_time 単位時間
    f0_array=self.f0_estimate(filepath)

    #f0_arrayは長すぎるので、短くして渡す
    #1sを約200分割している

    p_array=[]
  
    cut_block=200*cut_time 
    block_sum=0

    for i in range(len(f0_array)):
      block_sum=block_sum+f0_array[i]
      if i%cut_block==0 and i!=0:
        p_array.append(block_sum/cut_block)
        block_sum=0

    return p_array